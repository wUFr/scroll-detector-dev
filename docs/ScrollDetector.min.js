/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/Options.js":
/*!*************************!*\
  !*** ./dist/Options.js ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.defaultOptions = void 0;
var defaultOptions = {
  wrapperClass: "-js-scrollDetector-wrapper",
  scrollClass: "-js-scrollDetector-scroll",
  contentClass: "-js-scrollDetector-content",
  debug: false
};
exports.defaultOptions = defaultOptions;

/***/ }),

/***/ "./dist/ScrollDetector.init.js":
/*!*************************************!*\
  !*** ./dist/ScrollDetector.init.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var ScrollDetector_1 = __importDefault(__webpack_require__(/*! ./ScrollDetector */ "./dist/ScrollDetector.js"));

var sc = new ScrollDetector_1["default"]({
  debug: true
});
sc.init();

/***/ }),

/***/ "./dist/ScrollDetector.js":
/*!********************************!*\
  !*** ./dist/ScrollDetector.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var Options_1 = __webpack_require__(/*! ./Options */ "./dist/Options.js");

var ScrollType_1 = __importDefault(__webpack_require__(/*! ./ScrollType */ "./dist/ScrollType.js"));

var ScrollDetector =
/** @class */
function () {
  function ScrollDetector(options) {
    if (options === void 0) {
      options = null;
    }

    this.options = __assign(__assign({}, options), Options_1.defaultOptions);
  }

  ScrollDetector.prototype.getWrapperElements = function () {
    if (!this.options.wrapperClass) {
      return null;
    }

    return Array.from(document.querySelectorAll(this.options.wrapperClass));
  };

  ScrollDetector.prototype.debugLog = function () {
    var options = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      options[_i] = arguments[_i];
    }

    if (this.options.debug) {
      console.log(options);
    }
  };

  ScrollDetector.prototype.init = function () {
    var _this = this; // CHECK IF THERE ARE ANY ELEMENTS


    if (!this.getWrapperElements()) {
      this.debugLog("%cscrollDetector - init(): No wrapper elements found, try checking your classnames", "color: red", this.options.wrapperClass);
      return;
    }

    this.debugLog("scrollDetector - init(): Found elements", this.getWrapperElements());

    var _loop_1 = function _loop_1(wrapper) {
      // PREVENT DOUBLE-INIT WHICH WOULD RESULT IN CALLING THIS CODE TWICE OR MORE
      if (wrapper.classList.contains("-js-scrollDetector-init")) {
        return "continue";
      }

      wrapper.classList.add("-js-scrollDetector-init");
      var scroller = Array.from(wrapper.getElementsByClassName(this_1.options.scrollClass))[0];

      if (!scroller) {
        this_1.debugLog("%cscrollDetector - init(): This wrapper does not have scroll element inside.", "color: red", wrapper);
        return "continue";
      }

      switch (wrapper.getAttribute("data-scrollType")) {
        case ScrollType_1["default"].horizontal:
          {
            // RUN ONCE ON DOMREADY
            document.addEventListener("DOMContentLoaded", function () {
              return _this.detectXScrollPosition(scroller);
            }); // KEEP CHECKING WHEN SCROLLING THROUGH

            scroller.addEventListener("scroll", function () {
              return _this.detectXScrollPosition(scroller);
            });
          }

        case ScrollType_1["default"].vertical:
          {
            // RUN ONCE ON DOMREADY
            document.addEventListener("DOMContentLoaded", function () {
              return _this.detectYScrollPosition(scroller);
            }); // KEEP CHECKING WHEN SCROLLING THROUGH

            scroller.addEventListener("scroll", function () {
              return _this.detectYScrollPosition(scroller);
            });
          }
      }
    };

    var this_1 = this;

    for (var _i = 0, _a = this.getWrapperElements(); _i < _a.length; _i++) {
      var wrapper = _a[_i];

      _loop_1(wrapper);
    }
  };

  ScrollDetector.prototype.detectXScrollPosition = function (scroller) {
    var offset = 5; // @todo: Add this to options

    var widthContainer = scroller.offsetWidth;
    var widthContent = scroller.getElementsByClassName(this.options.contentClass)[0].offsetWidth;
    var areaWrapper = scroller.closest("." + this.options.wrapperClass);
    var toStart = scroller.scrollLeft;
    var toEnd = (widthContainer - Math.ceil(widthContent) + Math.ceil(toStart)) * -1;

    if (toStart > 0 + offset) {
      areaWrapper.classList.add("-js-start-shadow"); // @todo: Add this class to options
    } else {
      areaWrapper.classList.remove("-js-start-shadow"); // @todo: Add this class to options
    }

    if (toEnd > 0 + offset) {
      areaWrapper.classList.add("-js-end-shadow"); // @todo: Add this class to options
    } else {
      areaWrapper.classList.remove("-js-end-shadow"); // @todo: Add this class to options
    }
  };

  ScrollDetector.prototype.detectYScrollPosition = function (scroller) {
    var offset = 5; // @todo: Add this to options

    var heightContainer = scroller.offsetHeight;
    var heightContent = scroller.getElementsByClassName(this.options.contentClass)[0].offsetHeight;
    var areaWrapper = scroller.closest("." + this.options.wrapperClass);
    var toStart = scroller.scrollTop;
    var toEnd = (heightContainer - Math.ceil(heightContent) + Math.ceil(toStart)) * -1;

    if (toStart > 0 + offset) {
      areaWrapper.classList.add("-js-start-shadow"); // @todo: Add this class to options
    } else {
      areaWrapper.classList.remove("-js-start-shadow"); // @todo: Add this class to options
    }

    if (toEnd > 0 + offset) {
      areaWrapper.classList.add("-js-end-shadow"); // @todo: Add this class to options
    } else {
      areaWrapper.classList.remove("-js-end-shadow"); // @todo: Add this class to options
    }
  };

  return ScrollDetector;
}();

exports.default = ScrollDetector;

/***/ }),

/***/ "./dist/ScrollType.js":
/*!****************************!*\
  !*** ./dist/ScrollType.js ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var ScrollType;

(function (ScrollType) {
  ScrollType["horizontal"] = "horizontal";
  ScrollType["vertical"] = "vertical";
})(ScrollType || (ScrollType = {}));

exports.default = ScrollType;

/***/ }),

/***/ "./less/scrollDetector.less":
/*!**********************************!*\
  !*** ./less/scrollDetector.less ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./less/scrollDetector.demo.less":
/*!***************************************!*\
  !*** ./less/scrollDetector.demo.less ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/docs/ScrollDetector.min": 0,
/******/ 			"css/scrollDetector.demo": 0,
/******/ 			"css/scrollDetector.min": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkscroll_detector"] = self["webpackChunkscroll_detector"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/scrollDetector.demo","css/scrollDetector.min"], () => (__webpack_require__("./dist/ScrollDetector.init.js")))
/******/ 	__webpack_require__.O(undefined, ["css/scrollDetector.demo","css/scrollDetector.min"], () => (__webpack_require__("./less/scrollDetector.less")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/scrollDetector.demo","css/scrollDetector.min"], () => (__webpack_require__("./less/scrollDetector.demo.less")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;